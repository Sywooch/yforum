<?php

/**
 * Created by PhpStorm.
 * User: noble4cc
 * Date: 16/5/18
 * Time: 下午9:49
 */
namespace frontend\modules\topic\models;
use common\models\PostTag;
use Yii;
use common\models\Post;
use frontend\modules\user\models\UserMeta;
use yii\web\NotFoundHttpException;

class Topic extends Post
{
    const TYPE='topic';
    public $cc;

    public function getLike()
    {
        $model = new UserMeta();
        return $model->isUserAction(self::TYPE, 'like', $this->id);
    }

    public function getFollow()
    {
        $model = new UserMeta();
        return $model->isUserAction(self::TYPE, 'follow', $this->id);
    }

    public function getHate()
    {
        $model = new UserMeta();
        return $model->isUserAction(self::TYPE, 'hate', $this->id);
    }

    public function getFavorite()
    {
        $model = new UserMeta();
        return $model->isUserAction(self::TYPE, 'favorite', $this->id);
    }

    public function getThanks()
    {
        $model = new UserMeta();
        return $model->isUserAction(self::TYPE, 'thanks', $this->id);
    }
    public function beforeSave($insert)
    {
        if(parent::beforeSave($insert))
        {
            if($this->tags)
            {
                $this->addTags(explode(',',$this->tags));
            }
            if($insert)
            {
                $this->user_id=($this->user_id)?:Yii::$app->user->id;
                $this->type=self::TYPE;
                $this->last_comment_time=$this->created_at;
            }
            return true;
        }
        return false;
    }

    /**更新最后回复
     * @param string $username
     */
    public function lastCommentToUpdate($username='')
    {
        $this->setAttributes(['last_comment_username'=>$username,
            'last_comment_time'=>time()]);
        $this->save();
    }

    /**
     * 添加tag
     * @param array $tags
     */
    public function addTags(array $tags)
    {
        foreach ($tags as $tag)
        {
            $model=PostTag::findOne(['name'=>$tag]);
            if(!$model)
            {
                $model=new PostTag();
                $model->setAttributes(['name'=>$tag,'count'=>1]);
                if($model->save())
                {
                    return true;
                }
            }
            else{
                $model->updateCounters(['count'=>1]);
            }
        }
        return false;
    }


    /**
     * 根据id和状态获得帖子
     * @param $id
     * @param string $status
     */
    public static function findModel($id,$condition='')
    {
        $model=static::find()
            ->where($condition)
            ->andWhere(['id'=>$id,'type'=>self::TYPE])
            ->one();
        if($model)
        {
            return $model;
        }
        else
        {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

    /**
     * 根据id查找帖子
     * @param $id
     */
    public static function findTopic($id)
    {
        return static::findModel($id,['>=','status',self::STATUS_ACTIVE]);
    }

    /**
     * 查找已经删除的文章
     * @param $id
     * @throws NotFoundHttpException
     */
    public static function findDeleteTopic($id)
    {
        return static::findModel($id,['>=','status',self::STATUS_DELETED]);
    }
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}